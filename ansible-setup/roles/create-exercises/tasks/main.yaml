---
# Aufgaben 
###########
#
# Eine Liste aller Aufgaben findet sich in der README.md

- name: Erstelle Schnitzeljagd-Ordner
  tags: ['teil1', 'never']
  ansible.builtin.file: 
    path: "/home/{{ item }}/schnitzeljagd"
    mode: '0750'
    owner: "{{ item }}"
    state: directory
    group: users
  loop: "{{ ssh_jailed_users }}"

- name: Erstelle Readme.md, tipps und solution
  tags: ['teil1']
  ansible.builtin.copy:
    src: "{{ src_dir }}/{{ item[0] }}"
    owner: "{{ item[1] }}"
    group: users
    dest: "/home/{{ item[1] }}/schnitzeljagd/{{ item[0] }}"
  with_nested:
    - "{{ etc_files }}"
    - "{{ ssh_jailed_users }}"

# Erstelle Teil 1
- name: Erstelle Schnitzeljagd
  tags: ['teil1', 'never']
  ansible.builtin.copy:
    src: "{{ src_dir }}/{{ item[0] }}"
    owner: "{{ item[1] }}"
    group: users
    # defaults to umask
    #mode: '0750'
    dest: "/home/{{ item[1] }}/schnitzeljagd/"
  with_nested: 
  - "{{ teil1 }}"
  - "{{ ssh_jailed_users }}"

# Aufgabe 8; finde und führe Alias aus
- name: Erstelle Alias für Aufgabe 8
  tags: ['teil1', 'never']
  ansible.builtin.lineinfile:
    path: "/home/{{ item }}/.bashrc"
    create: true
    insertafter: "EOF"
    line: "alias quallenfischersong=/etc/quallenfischersong.sh"
    state: present
    owner: "{{ item }}"
    group: users
    mode: '0644'
  loop: "{{ ssh_jailed_users }}"

- name: Lege das Skript ab für Aufgabe 8
  tags: ['teil1', 'never']
  ansible.builtin.copy:
    src: quallenfischersong.sh
    dest: /etc/
    owner: root
    group: root
    mode: "0755"

# Erstelle Aufgaben für Teil2
- name: Erstelle Aufgaben für Tag 2 / Teil 2
  tags: ['teil2', 'never']
  ansible.builtin.copy:
    src: "{{ src_dir }}/{{ item[0] }}"
    owner: "{{ item[1] }}"
    group: users
    dest: "/home/{{ item[1] }}/schnitzeljagd/"
  with_nested: 
  - "{{ teil2 }}"
  - "{{ ssh_jailed_users }}"

# Aufgabe 12; Dateien vergleichen (Hardlinks); alle Fake
- name: Erstelle Hardlinks
  tags: ['teil2', 'never']
  ansible.builtin.file:
    src: "/home/{{ item[1] }}/schnitzeljagd/12/unterordner/bestellung"
    dest: "/home/{{ item[1] }}/schnitzeljagd/12/unterordner/bestellung_{{ item[0] }}"
    state: hard
    owner: "{{ item[1] }}"
    group: users
  with_nested:
   - "{{ ['1', '2', '3', '4', '5', '6', '8', '9'] }}" # Datei-Namen der Hardlinks
   - "{{ ssh_jailed_users }}"

# Richtige Lösung ist der Softlink!
- name: Erstelle Datei für Lösung für Aufgabe 12
  tags: ['teil2', 'never']
  ansible.builtin.copy:
    src: "{{ src_dir }}/12/unterordner/bestellung"
    dest: "/home/{{ item }}/schnitzeljagd/12/unterordner/bestellung_7"
    owner: "{{ item }}"
    group: users
  loop: "{{ ssh_jailed_users }}"

# Aufgabe 14; nicht lesbare Datei lesbar machen
- name: Passe Berechtigungen für Aufgabe 14 an
  tags: ['teil2', 'never'] 
  ansible.builtin.file:
    path: "/home/{{ item }}/schnitzeljagd/14/krabbenburgergeheimrezept"
    owner: root
    group: root
    mode: '0400'
  loop: "{{ ssh_jailed_users }}"

# Aufgabe 15; nicht lesbaren Ordner lesbar machen
- name: Passe Berechtigungen für Aufgabe 15 an
  tags: ['teil2', 'never']
  ansible.builtin.file:
    path: "/home/{{ item }}/schnitzeljagd/15/unterordner"
    state: directory
    recurse: true
    owner: root
    group: root
    mode: '0700'
  loop: "{{ ssh_jailed_users }}"

# Aufgabe 17; Datei die keinem User und keiner Gruppe gehört
- name: Passe Datei an für Aufgabe 17
  tags: ['teil2', 'never']
  ansible.builtin.file:
    path: "/home/{{ item }}/schnitzeljagd/17/unterordner/Lorem/4/9/10/sometest"
    owner: 500
    group: 500
  loop: "{{ ssh_jailed_users }}"

# Aufgabe 21; env-Variable für Plankton; Test mit User-Service und linger-User
- name: Erstelle Ordnerstruktur für SystemD-Service
  tags: ['teil2', 'never']
  ansible.builtin.file:
    path: /home/plankton/.config/systemd/user
    state: directory
    owner: plankton
    group: users
    mode: 0755

- name: Erstelle Env-Service für Aufgabe 21
  tags: ['teil2', 'never']
  ansible.builtin.template:
    src: set_env@service
    dest: /home/plankton/.config/systemd/user/set-env.service
    owner: plankton
    group: users
    mode: '0644'

- name: Enable Linger User
  ansible.builtin.command: 
    cmd: "/usr/bin/loginctl enable-linger plankton"

- name: Starte ENV-Service
  ansible.builtin.systemd_service:
    name: set-env.service
    scope: user
    state: started
    enabled: true
    daemon_reload: true
  become_user: "plankton"